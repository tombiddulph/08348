--14/11/2017----------------------------------------------------- 
Lexical Tokens for a.spl 
--10:00:00.70----------------------------------------------------- 
Identifier token: ProgA
Token: COLON
Token: CODE
Token: WRITE
Token: BRA
Character constant token: h
Token: COMMA
Character constant token: e
Token: COMMA
Character constant token: l
Token: COMMA
Character constant token: l
Token: COMMA
Character constant token: o
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: ProgA
Token: FULL_STOP
--14/11/2017----------------------------------------------------- 
Lexical Tokens for b.spl 
--10:00:03.32----------------------------------------------------- 
Identifier token: ProgB
Token: COLON
Token: DECLARATIONS
Identifier token: a
Token: COMMA
Identifier token: b
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMI_COLON
Identifier token: c
Token: OF
Token: TYPE
Token: CHARACTER
Token: SEMI_COLON
Identifier token: d
Token: COMMA
Identifier token: e
Token: OF
Token: TYPE
Token: REAL
Token: SEMI_COLON
Token: CODE
Token: READ
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: b
Token: KET
Token: SEMI_COLON
Token: IF
Identifier token: a
Token: GREATER_THAN
Identifier token: b
Token: THEN
Token: WRITE
Token: BRA
Character constant token: A
Token: KET
Token: ELSE
Token: WRITE
Token: BRA
Character constant token: B
Token: KET
Token: END_IF
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: d
Token: KET
Token: SEMI_COLON
Identifier token: d
Token: MULTIPLY
Real token: 2.300000
Token: ASSIGNMENT
Identifier token: e
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: e
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: c
Token: KET
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: c
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: ProgB
Token: FULL_STOP
--14/11/2017----------------------------------------------------- 
Lexical Tokens for c.spl 
--10:00:04.28----------------------------------------------------- 
Identifier token: Prog3
Token: COLON
Token: DECLARATIONS
Identifier token: a
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMI_COLON
Token: CODE
Token: FOR
Identifier token: a
Token: IS
Integer token:  1
Token: BY
Integer token:  1
Token: TO
Integer token:  13
Token: DO
Token: IF
Token: NOT
Identifier token: a
Token: EQUAL_TO
Integer token:  7
Token: THEN
Token: WRITE
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_IF
Token: END_FOR
Token: SEMI_COLON
Integer token:  0
Token: ASSIGNMENT
Identifier token: a
Token: SEMI_COLON
Token: DO
Identifier token: a
Token: ADD
Integer token:  1
Token: ASSIGNMENT
Identifier token: a
Token: SEMI_COLON
Token: IF
Token: NOT
Identifier token: a
Token: EQUAL_TO
Integer token:  6
Token: AND
Identifier token: a
Token: NOT_EQUAL
Integer token:  8
Token: THEN
Token: WRITE
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_IF
Token: WHILE
Identifier token: a
Token: LESS_THAN
Integer token:  14
Token: END_DO
Token: SEMI_COLON
Integer token:  0
Token: ASSIGNMENT
Identifier token: a
Token: SEMI_COLON
Token: WHILE
Identifier token: a
Token: LESS_THAN
Integer token:  12
Token: DO
Token: WRITE
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Identifier token: a
Token: ADD
Integer token:  1
Token: ASSIGNMENT
Identifier token: a
Token: END_WHILE
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: Prog3
Token: FULL_STOP
--14/11/2017----------------------------------------------------- 
Lexical Tokens for d.spl 
--10:00:11.16----------------------------------------------------- 
Identifier token: Prog4D
Token: COLON
Token: DECLARATIONS
Identifier token: r1
Token: COMMA
Identifier token: r2
Token: COMMA
Identifier token: r3
Token: OF
Token: TYPE
Token: REAL
Token: SEMI_COLON
Token: CODE
Token: MINUS
Real token: 2.400000
Token: ASSIGNMENT
Identifier token: r1
Token: SEMI_COLON
Token: MINUS
Real token: 34.989000
Token: ASSIGNMENT
Identifier token: r2
Token: SEMI_COLON
Identifier token: r1
Token: MULTIPLY
Identifier token: r2
Token: DIVIDE
Real token: 7.400000
Token: ASSIGNMENT
Identifier token: r3
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: r3
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: r1
Token: KET
Token: SEMI_COLON
Identifier token: r1
Token: ADD
Identifier token: r3
Token: ASSIGNMENT
Identifier token: r3
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: r3
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: Prog4D
Token: FULL_STOP
--14/11/2017----------------------------------------------------- 
Lexical Tokens for e.spl 
--10:00:14.28----------------------------------------------------- 
Identifier token: ProgV
Token: COLON
Token: DECLARATIONS
Identifier token: integer
Token: COMMA
Identifier token: i
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMI_COLON
Token: CODE
Token: READ
Token: BRA
Identifier token: integer
Token: KET
Token: SEMI_COLON
Token: IF
Identifier token: integer
Token: LESS_THAN_EQUAL_TO
Integer token:  5
Token: OR
Identifier token: integer
Token: GREATER_THAN_EQUAL_TO
Integer token:  12
Token: THEN
Token: WRITE
Token: BRA
Identifier token: integer
Token: KET
Token: END_IF
Token: SEMI_COLON
Token: WRITE
Token: BRA
Token: BRA
Integer token:  36
Token: MINUS
Integer token:  1
Token: KET
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: FOR
Identifier token: integer
Token: IS
Token: MINUS
Integer token:  1
Token: BY
Token: MINUS
Integer token:  1
Token: TO
Token: MINUS
Integer token:  5
Token: DO
Token: WRITE
Token: BRA
Identifier token: integer
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_FOR
Token: SEMI_COLON
Token: MINUS
Integer token:  1
Token: ASSIGNMENT
Identifier token: i
Token: SEMI_COLON
Token: FOR
Identifier token: integer
Token: IS
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: BY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: TO
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Token: BRA
Identifier token: i
Token: ADD
Identifier token: i
Token: ADD
Identifier token: i
Token: ADD
Identifier token: i
Token: ADD
Identifier token: i
Token: KET
Token: DO
Token: WRITE
Token: BRA
Identifier token: integer
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_FOR
Token: ENDP
Identifier token: ProgV
Token: FULL_STOP
--14/11/2017----------------------------------------------------- 
Parse debug output for a.spl 
--10:00:23.70----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 6
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49
Entering state 80
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 26 (line 269):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 26 (line 269):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 1Item: 0 nodeIdentifier: 0
Item: -1 nodeIdentifier: 1
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 15015792 nodeIdentifier: 37
Item: -1 nodeIdentifier: 32
Item: 15013856 nodeIdentifier: 37
Item: -1 nodeIdentifier: 32
Item: 15014040 nodeIdentifier: 37
Item: -1 nodeIdentifier: 32
Item: 15008928 nodeIdentifier: 37
Item: -1 nodeIdentifier: 32
Item: 15014688 nodeIdentifier: 37
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
02
Entering state 111
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 26 (line 269):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token KET_T ()
Reducing stack by rule 26 (line 269):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 6
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 6
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 6
Entering state 23
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 6 23 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 6 23 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 6
Entering state 23
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 3 (line 150):
   $1 = token CODE_T ()
   $2 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 130):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--14/11/2017----------------------------------------------------- 
Parse debug output for b.spl 
--10:01:25.13----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token INTEGER_T ()
Shifting token INTEGER_T ()
Entering state 92
Reducing stack by rule 55 (line 409):
   $1 = token INTEGER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token CHARACTER_T ()
Shifting token CHARACTER_T ()
Entering state 91
Reducing stack by rule 57 (line 417):
   $1 = token CHARACTER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token REAL_T ()
Shifting token REAL_T ()
Entering state 93
Reducing stack by rule 56 (line 413):
   $1 = token REAL_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62 94 106 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 157):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62 94 106 8 40
Entering state 63
Reducing stack by rule 6 (line 166):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62 94 106
Entering state 114
Reducing stack by rule 5 (line 162):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
   $6 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 39 62 94 106
Entering state 114
Reducing stack by rule 5 (line 162):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
   $6 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40
Entering state 63
Reducing stack by rule 6 (line 166):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 229):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41
Entering state 27
Reducing stack by rule 11 (line 191):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 229):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 191):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 36
Reading a token: Next token is token GREATER_THAN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 46
Next token is token GREATER_THAN_T ()
Shifting token GREATER_THAN_T ()
Entering state 73
Reducing stack by rule 43 (line 352):
   $1 = token GREATER_THAN_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 12 46
Entering state 76
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 315):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 95
Reading a token: Next token is token ELSE_T ()
Shifting token ELSE_T ()
Entering state 107
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 291):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 33
Reducing stack by rule 29 (line 285):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107
Entering state 115
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 117
Reducing stack by rule 21 (line 239):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token ELSE_T ()
   $6 = nterm statement_block ()
   $7 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 28
Reducing stack by rule 12 (line 195):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 229):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 191):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 21
Reducing stack by rule 32 (line 301):
   $1 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 229):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 191):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COItem: 0 nodeIdentifier: 0
Item: -1 nodeIdentifier: 1
Item: 1 nodeIdentifier: 4
Item: 2 nodeIdentifier: 4
Item: 38 nodeIdentifier: 41
Item: 3 nodeIdentifier: 4
Item: 40 nodeIdentifier: 41
Item: 4 nodeIdentifier: 4
Item: 5 nodeIdentifier: 4
Item: 39 nodeIdentifier: 41
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 7 nodeIdentifier: 3
Item: 1 nodeIdentifier: 7
Item: 7 nodeIdentifier: 3
Item: 2 nodeIdentifier: 7
Item: 8 nodeIdentifier: 3
Item: -1 nodeIdentifier: 8
Item: -1 nodeIdentifier: 18
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 25 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 14425336 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 14424856 nodeIdentifier: 37
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: 7 nodeIdentifier: 3
Item: 4 nodeIdentifier: 7
Item: 5 nodeIdentifier: 3
Item: 5 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 32
Item: 4 nodeIdentifier: 35
Item: 14466792 nodeIdentifier: 37
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 5 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: 7 nodeIdentifier: 3
Item: 3 nodeIdentifier: 7
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 3 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
LON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 146):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 130):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--14/11/2017----------------------------------------------------- 
Parse debug output for c.spl 
--10:01:30.56----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token INTEGER_T ()
Shifting token INTEGER_T ()
Entering state 92
Reducing stack by rule 55 (line 409):
   $1 = token INTEGER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 157):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token FOR_T ()
Shifting token FOR_T ()
Entering state 13
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token IS_T ()
Shifting token IS_T ()
Entering state 77
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 36
Reading a token: Next token is token BY_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 99
Next token is token BY_T ()
Shifting token BY_T ()
Entering state 109
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 36
Reading a token: Next token is token TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 116
Next token is token TO_T ()
Shifting token TO_T ()
Entering state 118
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 119
Next token is token DO_T ()
Reducing stack by rule 25 (line 263):
   $1 = token ID ()
   $2 = token IS_T ()
   $3 = nterm expr ()
   $4 = token BY_T ()
   $5 = nterm expr ()
   $6 = token TO_T ()
   $7 = nterm expr ()
-> $$ = nterm for_body ()
Stack now 0 1 3 5 9 41 13
Entering state 48
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 78
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token NOT_T ()
Shifting token NOT_T ()
Entering state 43
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 36
Reading a token: Next token is token EQUAL_TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 46
Next token is token EQUAL_TO_T ()
Shifting token EQUAL_TO_T ()
Entering state 70
Reducing stack by rule 40 (line 340):
   $1 = token EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 66
Reducing stack by rule 39 (line 333):
   $1 = token NOT_T ()
   $2 = nterm conditional_body ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 13 48 78 12
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 315):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 13 48 78 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 95
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 95 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 95 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 95
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 108
Reducing stack by rule 20 (line 235):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 13 48 78
Entering state 28
Reducing stack by rule 12 (line 195):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 13 48 78
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 13 48 78
Entering state 100
Reading a token: Next token is token END_FOR_T ()
Shifting token END_FOR_T ()
Entering state 110
Reducing stack by rule 24 (line 257):
   $1 = token FOR_T ()
   $2 = nterm for_body ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_FOR_T ()
-> $$ = nterm for_statement ()
Stack now 0 1 3 5 9 41
Entering state 31
Reducing stack by rule 15 (line 207):
   $1 = nterm for_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token DO_T ()
Shifting token DO_T ()
Entering state 22
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 35
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 86
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 54
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token NOT_T ()
Shifting token NOT_T ()
Entering state 43
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 36
Reading a token: Next token is token EQUAL_TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 46
Next token is token EQUAL_TO_T ()
Shifting token EQUAL_TO_T ()
Entering state 70
Reducing stack by rule 40 (line 340):
   $1 = token EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 36
Reading a token: Next token is token AND_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 98
Next token is token AND_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 66
Reducing stack by rule 39 (line 333):
   $1 = token NOT_T ()
   $2 = nterm conditional_body ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12
Entering state 45
Next token is token AND_T ()
Shifting token AND_T ()
Entering state 68
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 36
Reading a token: Next token is token NOT_EQUAL_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 46
Next token is token NOT_EQUAL_T ()
Shifting token NOT_EQUAL_T ()
Entering state 71
Reducing stack by rule 41 (line 344):
   $1 = token NOT_EQUAL_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 315):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 96
Reducing stack by rule 37 (line 323):
   $1 = nterm conditional_body ()
   $2 = token AND_T ()
   $3 = nterm conditional ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 95
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 95 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 95 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 95
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 108
Reducing stack by rule 20 (line 235):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55
Entering state 28
Reducing stack by rule 12 (line 195):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 54
Reading a token: Next token is token WHILE_T ()
Shifting token WHILE_T ()
Entering state 83
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 36
Reading a token: Next token is token LESS_THAN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 46
Next token is token LESS_THAN_T ()
Shifting token LESS_THAN_T ()
Entering state 72
Reducing stack by rule 42 (line 348):
   $1 = token LESS_THAN_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 36
Reading a token: Next token is token END_DO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 98
Next token is token END_DO_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 45
Next token is token END_DO_T ()
Reducing stack by rule 35 (line 315):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 105
Next token is token END_DO_T ()
Shifting token END_DO_T ()
Entering state 113
Reducing stack by rule 22 (line 245):
   $1 = token DO_T ()
   $2 = nterm statement_block ()
   $3 = token WHILE_T ()
   $4 = nterm conditional ()
   $5 = token END_DO_T ()
-> $$ = nterm do_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 29
Reducing stack by rule 13 (line 199):
   $1 = nterm do_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WHILE_T ()
Shifting token WHILE_T ()
Entering state 16
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 36
Reading a token: Next token is token LESS_THAN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 46
Next token is token LESS_THAN_T ()
Shifting token LESS_THAN_T ()
Entering state 72
Reducing stack by rule 42 (line 348):
   $1 = token LESS_THAN_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 16 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 98
Next token is token DO_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 45
Next token is token DO_T ()
Reducing stack by rule 35 (line 315):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 51
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 82
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 104
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 35
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 86
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
SItem: 0 nodeIdentifier: 0
Item: -1 nodeIdentifier: 1
Item: 1 nodeIdentifier: 4
Item: 38 nodeIdentifier: 41
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 11 nodeIdentifier: 3
Item: -1 nodeIdentifier: 11
Item: 1 nodeIdentifier: 12
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7214976 nodeIdentifier: 37
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7215136 nodeIdentifier: 37
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7215296 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: 8 nodeIdentifier: 3
Item: -1 nodeIdentifier: 8
Item: -1 nodeIdentifier: 18
Item: 13 nodeIdentifier: 19
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 23 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7215720 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: 5 nodeIdentifier: 3
Item: 1 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7215688 nodeIdentifier: 37
Item: 9 nodeIdentifier: 3
Item: -1 nodeIdentifier: 9
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 5 nodeIdentifier: 3
Item: 1 nodeIdentifier: 5
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 7257512 nodeIdentifier: 37
Item: 8 nodeIdentifier: 3
Item: -1 nodeIdentifier: 8
Item: 22 nodeIdentifier: 18
Item: 1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 23 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7256904 nodeIdentifier: 37
Item: -1 nodeIdentifier: 18
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 24 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7258440 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: -1 nodeIdentifier: 18
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 26 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7258152 nodeIdentifier: 37
Item: 5 nodeIdentifier: 3
Item: 1 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7259856 nodeIdentifier: 37
Item: 10 nodeIdentifier: 3
Item: -1 nodeIdentifier: 10
Item: -1 nodeIdentifier: 18
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 26 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 7260048 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 5 nodeIdentifier: 3
Item: 1 nodeIdentifier: 5
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 7258960 nodeIdentifier: 37
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
hifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 104
Reading a token: Next token is token END_WHILE_T ()
Shifting token END_WHILE_T ()
Entering state 112
Reducing stack by rule 23 (line 251):
   $1 = token WHILE_T ()
   $2 = nterm conditional ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_WHILE_T ()
-> $$ = nterm while_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 30
Reducing stack by rule 14 (line 203):
   $1 = nterm while_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 146):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 130):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--14/11/2017----------------------------------------------------- 
Parse debug output for d.spl 
--10:01:35.09----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token REAL_T ()
Shifting token REAL_T ()
Entering state 93
Reducing stack by rule 56 (line 413):
   $1 = token REAL_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 157):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 40
Entering state 63
Reducing stack by rule 6 (line 166):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40
Entering state 63
Reducing stack by rule 6 (line 166):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 53
Reducing stack by rule 34 (line 309):
   $1 = token MINUS_T ()
   $2 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 53
Reducing stack by rule 34 (line 309):
   $1 = token MINUS_T ()
   $2 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token DIVIDE_T ()
Shifting token DIVIDE_T ()
Entering state 60
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 21
Reducing stack by rule 32 (line 301):
   $1 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 36 60
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 36 60
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 36 60
Entering state 89
Reducing stack by rule 51 (line 389):
   $1 = nterm term ()
   $2 = token DIVIDE_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 229):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 191):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 35 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 35 57
Entering state 86
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   Item: 0 nodeIdentifier: 0
Item: -1 nodeIdentifier: 1
Item: 1 nodeIdentifier: 4
Item: 2 nodeIdentifier: 4
Item: 3 nodeIdentifier: 4
Item: 39 nodeIdentifier: 41
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 5 nodeIdentifier: 3
Item: 1 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 8460256 nodeIdentifier: 37
Item: 5 nodeIdentifier: 3
Item: 2 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 8460512 nodeIdentifier: 37
Item: 5 nodeIdentifier: 3
Item: 3 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 33
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: 8461384 nodeIdentifier: 37
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 3 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: 7 nodeIdentifier: 3
Item: 1 nodeIdentifier: 7
Item: 5 nodeIdentifier: 3
Item: 3 nodeIdentifier: 5
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 3 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 3 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
$2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 146):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 130):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--14/11/2017----------------------------------------------------- 
Parse debug output for e.spl 
--10:01:40.10----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token INTEGER_T ()
Shifting token INTEGER_T ()
Entering state 92
Reducing stack by rule 55 (line 409):
   $1 = token INTEGER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 157):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40
Entering state 63
Reducing stack by rule 6 (line 166):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 229):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41
Entering state 27
Reducing stack by rule 11 (line 191):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 36
Reading a token: Next token is token LESS_THAN_EQUAL_TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 46
Next token is token LESS_THAN_EQUAL_TO_T ()
Shifting token LESS_THAN_EQUAL_TO_T ()
Entering state 74
Reducing stack by rule 44 (line 356):
   $1 = token LESS_THAN_EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 12 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 36
Reading a token: Next token is token OR_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 98
Next token is token OR_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 45
Next token is token OR_T ()
Shifting token OR_T ()
Entering state 69
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 36
Reading a token: Next token is token GREATER_THAN_EQUAL_TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 46
Next token is token GREATER_THAN_EQUAL_TO_T ()
Shifting token GREATER_THAN_EQUAL_TO_T ()
Entering state 75
Reducing stack by rule 45 (line 360):
   $1 = token GREATER_THAN_EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 329):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 315):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 97
Reducing stack by rule 36 (line 319):
   $1 = nterm conditional_body ()
   $2 = token OR_T ()
   $3 = nterm conditional ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 95
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 108
Reducing stack by rule 20 (line 235):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 28
Reducing stack by rule 12 (line 195):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 11
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 36
Reading a token: Next token is token MINUS_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 42
Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 58
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 297):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 87
Reading a token: Next token is token KET_T ()
Reducing stack by rule 48 (line 374):
   $1 = nterm expr ()
   $2 = token MINUS_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 42
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 65
Reducing stack by rule 54 (line 403):
   $1 = token BRA_T ()
   $2 = nterm expr ()
   $3 = token KET_T ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token FOR_T ()
Shifting token FOR_T ()
Entering state 13
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token IS_T ()
Shifting token IS_T ()
Entering state 77
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 305):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token BY_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 99
Next token is token BY_T ()
Shifting token BY_T ()
Entering state 109
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 305):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 116
Next token is token TO_T ()
Shifting token TO_T ()
Entering state 118
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 305):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 119
Next token is token DO_T ()
Reducing stack by rule 25 (line 263):
   $1 = token ID ()
   $2 = token IS_T ()
   $3 = nterm expr ()
   $4 = token BY_T ()
   $5 = nterm expr ()
   $6 = token TO_T ()
   $7 = nterm expr ()
-> $$ = nterm for_body ()
Stack now 0 1 3 5 9 41 64 55 13
Entering state 48
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 78
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token END_FOR_T ()
Shifting token END_FOR_T ()
Entering state 110
Reducing stack by rule 24 (line 257):
   $1 = token FOR_T ()
   $2 = nterm for_body ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_FOR_T ()
-> $$ = nterm for_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 31
Reducing stack by rule 15 (line 207):
   $1 = nterm for_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 305):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 281):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 399):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 213):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 183):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token FOR_T ()
Shifting token FOR_T ()
Entering state 13
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token IS_T ()
Shifting token IS_T ()
Entering state 77
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token BY_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 99
Next token is token BY_T ()
Shifting token BY_T ()
Entering state 109
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token TO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 116
Next token is token TO_T ()
Shifting token TO_T ()
Entering state 118
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 11
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token KET_T ()
Reducing stack by rule 47 (line 370):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 65
Reducing stack by rule 54 (line 403):
   $1 = token BRA_T ()
   $2 = nterm expr ()
   $3 = token KET_T ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59
Entering state 88
Reducing stack by rule 50 (line 385):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 366):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 119
Next token is token DO_T ()
Reducing stack by rule 25 (line 263):
   $1 = token ID ()
   $2 = token IS_T ()
   $3 = nterm expr ()
   $4 = token BY_T ()
   $5 = nterm expr ()
   $6 = token TO_T ()
   $7 = nterm expr ()
-> $$ = nterm for_body ()
Stack now 0 1 3 5 9 41 64 55 13
Entering state 48
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 78
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 395):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 Item: 0 nodeIdentifier: 0
Item: -1 nodeIdentifier: 1
Item: 1 nodeIdentifier: 4
Item: 2 nodeIdentifier: 4
Item: 38 nodeIdentifier: 41
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 7 nodeIdentifier: 3
Item: 1 nodeIdentifier: 7
Item: 8 nodeIdentifier: 3
Item: -1 nodeIdentifier: 8
Item: 21 nodeIdentifier: 18
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 28 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 137344 nodeIdentifier: 37
Item: -1 nodeIdentifier: 18
Item: -1 nodeIdentifier: 19
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 27 nodeIdentifier: 20
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 137736 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: -1 nodeIdentifier: 36
Item: -1 nodeIdentifier: 30
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 137608 nodeIdentifier: 37
Item: -1 nodeIdentifier: 32
Item: 138216 nodeIdentifier: 37
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: 11 nodeIdentifier: 3
Item: -1 nodeIdentifier: 11
Item: 1 nodeIdentifier: 12
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 180552 nodeIdentifier: 37
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 180136 nodeIdentifier: 37
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 179944 nodeIdentifier: 37
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
Item: 5 nodeIdentifier: 3
Item: 2 nodeIdentifier: 5
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 178760 nodeIdentifier: 37
Item: 11 nodeIdentifier: 3
Item: -1 nodeIdentifier: 11
Item: 1 nodeIdentifier: 12
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 34
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 36
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 31
Item: -1 nodeIdentifier: 29
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 32
Item: 2 nodeIdentifier: 35
Item: -1 nodeIdentifier: 2
Item: -1 nodeIdentifier: 2
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 6
Item: -1 nodeIdentifier: 13
Item: -1 nodeIdentifier: 32
Item: 1 nodeIdentifier: 35
Item: 6 nodeIdentifier: 3
Item: -1 nodeIdentifier: 14
3 5 9 41 64 55 13 48 78 14 49
Entering state 37
Reducing stack by rule 49 (line 381):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 273):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 219):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 24
Reducing stack by rule 8 (line 177):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 223):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 26
Reducing stack by rule 10 (line 187):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token END_FOR_T ()
Shifting token END_FOR_T ()
Entering state 110
Reducing stack by rule 24 (line 257):
   $1 = token FOR_T ()
   $2 = nterm for_body ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_FOR_T ()
-> $$ = nterm for_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 31
Reducing stack by rule 15 (line 207):
   $1 = nterm for_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 173):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 146):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 130):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
