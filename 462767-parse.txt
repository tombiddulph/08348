--13/11/2017----------------------------------------------------- 
Lexical Tokens for a.spl 
-- 9:31:51.00----------------------------------------------------- 
Identifier token: ProgA
Token: COLON
Token: CODE
Token: WRITE
Token: BRA
Character constant token: h
Token: COMMA
Character constant token: e
Token: COMMA
Character constant token: l
Token: COMMA
Character constant token: l
Token: COMMA
Character constant token: o
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: ProgA
Token: FULL_STOP
--13/11/2017----------------------------------------------------- 
Lexical Tokens for b.spl 
-- 9:31:53.02----------------------------------------------------- 
Identifier token: ProgB
Token: COLON
Token: DECLARATIONS
Identifier token: a
Token: COMMA
Identifier token: b
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMI_COLON
Identifier token: c
Token: OF
Token: TYPE
Token: CHARACTER
Token: SEMI_COLON
Identifier token: d
Token: COMMA
Identifier token: e
Token: OF
Token: TYPE
Token: REAL
Token: SEMI_COLON
Token: CODE
Token: READ
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: b
Token: KET
Token: SEMI_COLON
Token: IF
Identifier token: a
Token: GREATER_THAN
Identifier token: b
Token: THEN
Token: WRITE
Token: BRA
Character constant token: A
Token: KET
Token: ELSE
Token: WRITE
Token: BRA
Character constant token: B
Token: KET
Token: END_IF
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: d
Token: KET
Token: SEMI_COLON
Identifier token: d
Token: MULTIPLY
Real token: 2.300000
Token: ASSIGNMENT
Identifier token: e
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: e
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: c
Token: KET
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: c
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: ProgB
Token: FULL_STOP
--13/11/2017----------------------------------------------------- 
Lexical Tokens for c.spl 
-- 9:31:55.01----------------------------------------------------- 
Identifier token: Prog3
Token: COLON
Token: DECLARATIONS
Identifier token: a
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMI_COLON
Token: CODE
Token: FOR
Identifier token: a
Token: IS
Integer token:  1
Token: BY
Integer token:  1
Token: TO
Integer token:  13
Token: DO
Token: IF
Token: NOT
Identifier token: a
Token: EQUAL_TO
Integer token:  7
Token: THEN
Token: WRITE
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_IF
Token: END_FOR
Token: SEMI_COLON
Integer token:  0
Token: ASSIGNMENT
Identifier token: a
Token: SEMI_COLON
Token: DO
Identifier token: a
Token: ADD
Integer token:  1
Token: ASSIGNMENT
Identifier token: a
Token: SEMI_COLON
Token: IF
Token: NOT
Identifier token: a
Token: EQUAL_TO
Integer token:  6
Token: AND
Identifier token: a
Token: NOT_EQUAL
Integer token:  8
Token: THEN
Token: WRITE
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_IF
Token: WHILE
Identifier token: a
Token: LESS_THAN
Integer token:  14
Token: END_DO
Token: SEMI_COLON
Integer token:  0
Token: ASSIGNMENT
Identifier token: a
Token: SEMI_COLON
Token: WHILE
Identifier token: a
Token: LESS_THAN
Integer token:  12
Token: DO
Token: WRITE
Token: BRA
Identifier token: a
Token: KET
Token: SEMI_COLON
Identifier token: a
Token: ADD
Integer token:  1
Token: ASSIGNMENT
Identifier token: a
Token: END_WHILE
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: Prog3
Token: FULL_STOP
--13/11/2017----------------------------------------------------- 
Lexical Tokens for d.spl 
-- 9:31:56.71----------------------------------------------------- 
Identifier token: Prog4D
Token: COLON
Token: DECLARATIONS
Identifier token: r1
Token: COMMA
Identifier token: r2
Token: COMMA
Identifier token: r3
Token: OF
Token: TYPE
Token: REAL
Token: SEMI_COLON
Token: CODE
Token: MINUS
Real token: 2.400000
Token: ASSIGNMENT
Identifier token: r1
Token: SEMI_COLON
Token: MINUS
Real token: 34.989000
Token: ASSIGNMENT
Identifier token: r2
Token: SEMI_COLON
Identifier token: r1
Token: MULTIPLY
Identifier token: r2
Token: DIVIDE
Real token: 7.400000
Token: ASSIGNMENT
Identifier token: r3
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: r3
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: READ
Token: BRA
Identifier token: r1
Token: KET
Token: SEMI_COLON
Identifier token: r1
Token: ADD
Identifier token: r3
Token: ASSIGNMENT
Identifier token: r3
Token: SEMI_COLON
Token: WRITE
Token: BRA
Identifier token: r3
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: ENDP
Identifier token: Prog4D
Token: FULL_STOP
--13/11/2017----------------------------------------------------- 
Lexical Tokens for e.spl 
-- 9:31:58.17----------------------------------------------------- 
Identifier token: ProgV
Token: COLON
Token: DECLARATIONS
Identifier token: integer
Token: COMMA
Identifier token: i
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMI_COLON
Token: CODE
Token: READ
Token: BRA
Identifier token: integer
Token: KET
Token: SEMI_COLON
Token: IF
Identifier token: integer
Token: LESS_THAN_EQUAL_TO
Integer token:  5
Token: OR
Identifier token: integer
Token: GREATER_THAN_EQUAL_TO
Integer token:  12
Token: THEN
Token: WRITE
Token: BRA
Identifier token: integer
Token: KET
Token: END_IF
Token: SEMI_COLON
Token: WRITE
Token: BRA
Token: BRA
Integer token:  36
Token: MINUS
Integer token:  1
Token: KET
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: SEMI_COLON
Token: FOR
Identifier token: integer
Token: IS
Token: MINUS
Integer token:  1
Token: BY
Token: MINUS
Integer token:  1
Token: TO
Token: MINUS
Integer token:  5
Token: DO
Token: WRITE
Token: BRA
Identifier token: integer
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_FOR
Token: SEMI_COLON
Token: MINUS
Integer token:  1
Token: ASSIGNMENT
Identifier token: i
Token: SEMI_COLON
Token: FOR
Identifier token: integer
Token: IS
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: BY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: TO
Identifier token: i
Token: MULTIPLY
Identifier token: i
Token: MULTIPLY
Token: BRA
Identifier token: i
Token: ADD
Identifier token: i
Token: ADD
Identifier token: i
Token: ADD
Identifier token: i
Token: ADD
Identifier token: i
Token: KET
Token: DO
Token: WRITE
Token: BRA
Identifier token: integer
Token: KET
Token: SEMI_COLON
Token: NEWLINE
Token: END_FOR
Token: ENDP
Identifier token: ProgV
Token: FULL_STOP
--13/11/2017----------------------------------------------------- 
Parse debug output for a.spl 
-- 9:53:56.98----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 6
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49
Entering state 80
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 26 (line 266):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 26 (line 266):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token COMMA_T ()
Reducing stack by rule 26 (line 266):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 102
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 6 14 49 79 102
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 6 14 49 79 102
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 6 14 49 79 102
Entering state 111
Reading a token: Next token is token KET_T ()
Reducing stack by rule 26 (line 266):
   $1 = nterm output_block ()
   $2 = token COMMA_T ()
   $3 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 6 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 6
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 6
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 6
Entering state 23
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 6 23 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 6 23 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 6
Entering state 23
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 3 (line 147):
   $1 = token CODE_T ()
   $2 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 128):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--13/11/2017----------------------------------------------------- 
Parse debug output for b.spl 
-- 9:54:00.28----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token INTEGER_T ()
Shifting token INTEGER_T ()
Entering state 92
Reducing stack by rule 55 (line 406):
   $1 = token INTEGER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token CHARACTER_T ()
Shifting token CHARACTER_T ()
Entering state 91
Reducing stack by rule 57 (line 414):
   $1 = token CHARACTER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token REAL_T ()
Shifting token REAL_T ()
Entering state 93
Reducing stack by rule 56 (line 410):
   $1 = token REAL_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62 94 106 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 154):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62 94 106 8 40
Entering state 63
Reducing stack by rule 6 (line 163):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 39 62 94 106 8 39 62 94 106
Entering state 114
Reducing stack by rule 5 (line 159):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
   $6 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 39 62 94 106
Entering state 114
Reducing stack by rule 5 (line 159):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
   $6 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40
Entering state 63
Reducing stack by rule 6 (line 163):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 226):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41
Entering state 27
Reducing stack by rule 11 (line 188):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 226):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 188):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 36
Reading a token: Next token is token GREATER_THAN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 46
Next token is token GREATER_THAN_T ()
Shifting token GREATER_THAN_T ()
Entering state 73
Reducing stack by rule 43 (line 349):
   $1 = token GREATER_THAN_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 12 46
Entering state 76
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 312):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 95
Reading a token: Next token is token ELSE_T ()
Shifting token ELSE_T ()
Entering state 107
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token CHARACTER_CONSTANT_T ()
Shifting token CHARACTER_CONSTANT_T ()
Entering state 19
Reducing stack by rule 30 (line 288):
   $1 = token CHARACTER_CONSTANT_T ()
-> $$ = nterm character_constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 33
Reducing stack by rule 29 (line 282):
   $1 = nterm character_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 95 107
Entering state 115
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 117
Reducing stack by rule 21 (line 236):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token ELSE_T ()
   $6 = nterm statement_block ()
   $7 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 28
Reducing stack by rule 12 (line 192):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 226):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 188):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 21
Reducing stack by rule 32 (line 298):
   $1 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 226):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 188):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 143):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 128):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--13/11/2017----------------------------------------------------- 
Parse debug output for c.spl 
-- 9:54:01.52----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token INTEGER_T ()
Shifting token INTEGER_T ()
Entering state 92
Reducing stack by rule 55 (line 406):
   $1 = token INTEGER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 154):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token FOR_T ()
Shifting token FOR_T ()
Entering state 13
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token IS_T ()
Shifting token IS_T ()
Entering state 77
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 36
Reading a token: Next token is token BY_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 47 77
Entering state 99
Next token is token BY_T ()
Shifting token BY_T ()
Entering state 109
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 36
Reading a token: Next token is token TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 47 77 99 109
Entering state 116
Next token is token TO_T ()
Shifting token TO_T ()
Entering state 118
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 47 77 99 109 116 118
Entering state 119
Next token is token DO_T ()
Reducing stack by rule 25 (line 260):
   $1 = token ID ()
   $2 = token IS_T ()
   $3 = nterm expr ()
   $4 = token BY_T ()
   $5 = nterm expr ()
   $6 = token TO_T ()
   $7 = nterm expr ()
-> $$ = nterm for_body ()
Stack now 0 1 3 5 9 41 13
Entering state 48
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 78
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token NOT_T ()
Shifting token NOT_T ()
Entering state 43
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 36
Reading a token: Next token is token EQUAL_TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 46
Next token is token EQUAL_TO_T ()
Shifting token EQUAL_TO_T ()
Entering state 70
Reducing stack by rule 40 (line 337):
   $1 = token EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 13 48 78 12 43 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 13 48 78 12 43
Entering state 66
Reducing stack by rule 39 (line 330):
   $1 = token NOT_T ()
   $2 = nterm conditional_body ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 13 48 78 12
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 312):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 13 48 78 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 95
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 95 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67 95 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 13 48 78 12 44 67
Entering state 95
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 108
Reducing stack by rule 20 (line 232):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 13 48 78
Entering state 28
Reducing stack by rule 12 (line 192):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 13 48 78
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 13 48 78
Entering state 100
Reading a token: Next token is token END_FOR_T ()
Shifting token END_FOR_T ()
Entering state 110
Reducing stack by rule 24 (line 254):
   $1 = token FOR_T ()
   $2 = nterm for_body ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_FOR_T ()
-> $$ = nterm for_statement ()
Stack now 0 1 3 5 9 41
Entering state 31
Reducing stack by rule 15 (line 204):
   $1 = nterm for_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token DO_T ()
Shifting token DO_T ()
Entering state 22
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 35
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 35 57
Entering state 86
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 54
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token NOT_T ()
Shifting token NOT_T ()
Entering state 43
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 36
Reading a token: Next token is token EQUAL_TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 46
Next token is token EQUAL_TO_T ()
Shifting token EQUAL_TO_T ()
Entering state 70
Reducing stack by rule 40 (line 337):
   $1 = token EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 36
Reading a token: Next token is token AND_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43 46 76
Entering state 98
Next token is token AND_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 43
Entering state 66
Reducing stack by rule 39 (line 330):
   $1 = token NOT_T ()
   $2 = nterm conditional_body ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12
Entering state 45
Next token is token AND_T ()
Shifting token AND_T ()
Entering state 68
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 36
Reading a token: Next token is token NOT_EQUAL_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 46
Next token is token NOT_EQUAL_T ()
Shifting token NOT_EQUAL_T ()
Entering state 71
Reducing stack by rule 41 (line 341):
   $1 = token NOT_EQUAL_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 312):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 45 68
Entering state 96
Reducing stack by rule 37 (line 320):
   $1 = nterm conditional_body ()
   $2 = token AND_T ()
   $3 = nterm conditional ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 95
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 95 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67 95 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22 54 55 12 44 67
Entering state 95
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 108
Reducing stack by rule 20 (line 232):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55
Entering state 28
Reducing stack by rule 12 (line 192):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 22 54 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 22
Entering state 54
Reading a token: Next token is token WHILE_T ()
Shifting token WHILE_T ()
Entering state 83
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 36
Reading a token: Next token is token LESS_THAN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 46
Next token is token LESS_THAN_T ()
Shifting token LESS_THAN_T ()
Entering state 72
Reducing stack by rule 42 (line 345):
   $1 = token LESS_THAN_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 36
Reading a token: Next token is token END_DO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 22 54 83 46 76
Entering state 98
Next token is token END_DO_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 45
Next token is token END_DO_T ()
Reducing stack by rule 35 (line 312):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 22 54 83
Entering state 105
Next token is token END_DO_T ()
Shifting token END_DO_T ()
Entering state 113
Reducing stack by rule 22 (line 242):
   $1 = token DO_T ()
   $2 = nterm statement_block ()
   $3 = token WHILE_T ()
   $4 = nterm conditional ()
   $5 = token END_DO_T ()
-> $$ = nterm do_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 29
Reducing stack by rule 13 (line 196):
   $1 = nterm do_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WHILE_T ()
Shifting token WHILE_T ()
Entering state 16
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 36
Reading a token: Next token is token LESS_THAN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 46
Next token is token LESS_THAN_T ()
Shifting token LESS_THAN_T ()
Entering state 72
Reducing stack by rule 42 (line 345):
   $1 = token LESS_THAN_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 16 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16 46 76
Entering state 98
Next token is token DO_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 45
Next token is token DO_T ()
Reducing stack by rule 35 (line 312):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 16
Entering state 51
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 82
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 104
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 35
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55 35 57
Entering state 86
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 16 51 82 104 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 16 51 82
Entering state 104
Reading a token: Next token is token END_WHILE_T ()
Shifting token END_WHILE_T ()
Entering state 112
Reducing stack by rule 23 (line 248):
   $1 = token WHILE_T ()
   $2 = nterm conditional ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_WHILE_T ()
-> $$ = nterm while_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 30
Reducing stack by rule 14 (line 200):
   $1 = nterm while_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 143):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 128):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--13/11/2017----------------------------------------------------- 
Parse debug output for d.spl 
-- 9:54:03.07----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token REAL_T ()
Shifting token REAL_T ()
Entering state 93
Reducing stack by rule 56 (line 410):
   $1 = token REAL_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 154):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40 8 40
Entering state 63
Reducing stack by rule 6 (line 163):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40
Entering state 63
Reducing stack by rule 6 (line 163):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 53
Reducing stack by rule 34 (line 306):
   $1 = token MINUS_T ()
   $2 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 53
Reducing stack by rule 34 (line 306):
   $1 = token MINUS_T ()
   $2 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token DIVIDE_T ()
Shifting token DIVIDE_T ()
Entering state 60
Reading a token: Next token is token REAL_CONSTANT_T ()
Shifting token REAL_CONSTANT_T ()
Entering state 21
Reducing stack by rule 32 (line 298):
   $1 = token REAL_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 36 60
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 36 60
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 36 60
Entering state 89
Reducing stack by rule 51 (line 386):
   $1 = nterm term ()
   $2 = token DIVIDE_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 226):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 27
Reducing stack by rule 11 (line 188):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 35 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 35 57
Entering state 86
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 143):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 128):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
--13/11/2017----------------------------------------------------- 
Parse debug output for e.spl 
-- 9:54:04.48----------------------------------------------------- 
Starting parse
Entering state 0
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 1
Reading a token: Next token is token COLON_T ()
Shifting token COLON_T ()
Entering state 3
Reading a token: Next token is token DECLARATIONS_T ()
Shifting token DECLARATIONS_T ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token COMMA_T ()
Shifting token COMMA_T ()
Entering state 40
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 8
Reading a token: Next token is token OF_T ()
Shifting token OF_T ()
Entering state 39
Reading a token: Next token is token TYPE_T ()
Shifting token TYPE_T ()
Entering state 62
Reading a token: Next token is token INTEGER_T ()
Shifting token INTEGER_T ()
Entering state 92
Reducing stack by rule 55 (line 406):
   $1 = token INTEGER_T ()
-> $$ = nterm type ()
Stack now 0 1 3 5 8 40 8 39 62
Entering state 94
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 106
Reading a token: Next token is token CODE_T ()
Reducing stack by rule 4 (line 154):
   $1 = token ID ()
   $2 = token OF_T ()
   $3 = token TYPE_T ()
   $4 = nterm type ()
   $5 = token SEMI_COLON_T ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5 8 40
Entering state 63
Reducing stack by rule 6 (line 163):
   $1 = token ID ()
   $2 = token COMMA_T ()
   $3 = nterm declarations ()
-> $$ = nterm declarations ()
Stack now 0 1 3 5
Entering state 9
Next token is token CODE_T ()
Shifting token CODE_T ()
Entering state 41
Reading a token: Next token is token READ_T ()
Shifting token READ_T ()
Entering state 15
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 50
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 81
Reading a token: Next token is token KET_T ()
Shifting token KET_T ()
Entering state 103
Reducing stack by rule 19 (line 226):
   $1 = token READ_T ()
   $2 = token BRA_T ()
   $3 = token ID ()
   $4 = token KET_T ()
-> $$ = nterm read_statement ()
Stack now 0 1 3 5 9 41
Entering state 27
Reducing stack by rule 11 (line 188):
   $1 = nterm read_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token IF_T ()
Shifting token IF_T ()
Entering state 12
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 36
Reading a token: Next token is token LESS_THAN_EQUAL_TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 46
Next token is token LESS_THAN_EQUAL_TO_T ()
Shifting token LESS_THAN_EQUAL_TO_T ()
Entering state 74
Reducing stack by rule 44 (line 353):
   $1 = token LESS_THAN_EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 12 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 36
Reading a token: Next token is token OR_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 46 76
Entering state 98
Next token is token OR_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 45
Next token is token OR_T ()
Shifting token OR_T ()
Entering state 69
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 36
Reading a token: Next token is token GREATER_THAN_EQUAL_TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 46
Next token is token GREATER_THAN_EQUAL_TO_T ()
Shifting token GREATER_THAN_EQUAL_TO_T ()
Entering state 75
Reducing stack by rule 45 (line 357):
   $1 = token GREATER_THAN_EQUAL_TO_T ()
-> $$ = nterm comparator ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46
Entering state 76
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 36
Reading a token: Next token is token THEN_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 12 45 69 46 76
Entering state 98
Next token is token THEN_T ()
Reducing stack by rule 38 (line 326):
   $1 = nterm expr ()
   $2 = nterm comparator ()
   $3 = nterm expr ()
-> $$ = nterm conditional_body ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 45
Next token is token THEN_T ()
Reducing stack by rule 35 (line 312):
   $1 = nterm conditional_body ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 12 45 69
Entering state 97
Reducing stack by rule 36 (line 316):
   $1 = nterm conditional_body ()
   $2 = token OR_T ()
   $3 = nterm conditional ()
-> $$ = nterm conditional ()
Stack now 0 1 3 5 9 41 64 55 12
Entering state 44
Next token is token THEN_T ()
Shifting token THEN_T ()
Entering state 67
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 12 44 67
Entering state 95
Reading a token: Next token is token END_IF_T ()
Shifting token END_IF_T ()
Entering state 108
Reducing stack by rule 20 (line 232):
   $1 = token IF_T ()
   $2 = nterm conditional ()
   $3 = token THEN_T ()
   $4 = nterm statement_block ()
   $5 = token END_IF_T ()
-> $$ = nterm if_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 28
Reducing stack by rule 12 (line 192):
   $1 = nterm if_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 11
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 36
Reading a token: Next token is token MINUS_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 42
Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 58
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 20
Reducing stack by rule 31 (line 294):
   $1 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49 11 42 58
Entering state 87
Reading a token: Next token is token KET_T ()
Reducing stack by rule 48 (line 371):
   $1 = nterm expr ()
   $2 = token MINUS_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 14 49 11
Entering state 42
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 65
Reducing stack by rule 54 (line 400):
   $1 = token BRA_T ()
   $2 = nterm expr ()
   $3 = token KET_T ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token FOR_T ()
Shifting token FOR_T ()
Entering state 13
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token IS_T ()
Shifting token IS_T ()
Entering state 77
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 302):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token BY_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 99
Next token is token BY_T ()
Shifting token BY_T ()
Entering state 109
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 302):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 116
Next token is token TO_T ()
Shifting token TO_T ()
Entering state 118
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 302):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 119
Next token is token DO_T ()
Reducing stack by rule 25 (line 260):
   $1 = token ID ()
   $2 = token IS_T ()
   $3 = nterm expr ()
   $4 = token BY_T ()
   $5 = nterm expr ()
   $6 = token TO_T ()
   $7 = nterm expr ()
-> $$ = nterm for_body ()
Stack now 0 1 3 5 9 41 64 55 13
Entering state 48
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 78
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token END_FOR_T ()
Shifting token END_FOR_T ()
Entering state 110
Reducing stack by rule 24 (line 254):
   $1 = token FOR_T ()
   $2 = nterm for_body ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_FOR_T ()
-> $$ = nterm for_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 31
Reducing stack by rule 15 (line 204):
   $1 = nterm for_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token MINUS_T ()
Shifting token MINUS_T ()
Entering state 18
Reading a token: Next token is token INTEGER_CONSTANT_T ()
Shifting token INTEGER_CONSTANT_T ()
Entering state 52
Reducing stack by rule 33 (line 302):
   $1 = token MINUS_T ()
   $2 = token INTEGER_CONSTANT_T ()
-> $$ = nterm number_constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 34
Reducing stack by rule 28 (line 278):
   $1 = nterm number_constant ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 9 41 64 55
Entering state 32
Reducing stack by rule 53 (line 396):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55
Entering state 36
Reading a token: Next token is token ASSIGNMENT_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55
Entering state 35
Next token is token ASSIGNMENT_T ()
Shifting token ASSIGNMENT_T ()
Entering state 56
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 85
Reducing stack by rule 16 (line 210):
   $1 = nterm expr ()
   $2 = token ASSIGNMENT_T ()
   $3 = token ID ()
-> $$ = nterm assignment_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 25
Reducing stack by rule 9 (line 180):
   $1 = nterm assignment_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token FOR_T ()
Shifting token FOR_T ()
Entering state 13
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token IS_T ()
Shifting token IS_T ()
Entering state 77
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 36
Reading a token: Next token is token BY_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77
Entering state 99
Next token is token BY_T ()
Shifting token BY_T ()
Entering state 109
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 36
Reading a token: Next token is token TO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109
Entering state 116
Next token is token TO_T ()
Shifting token TO_T ()
Entering state 118
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token MULTIPLY_T ()
Shifting token MULTIPLY_T ()
Entering state 59
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 11
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 36
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token ADD_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token ADD_T ()
Shifting token ADD_T ()
Entering state 57
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11 42 57
Entering state 86
Reading a token: Next token is token KET_T ()
Reducing stack by rule 47 (line 367):
   $1 = nterm expr ()
   $2 = token ADD_T ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59 11
Entering state 42
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 65
Reducing stack by rule 54 (line 400):
   $1 = token BRA_T ()
   $2 = nterm expr ()
   $3 = token KET_T ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118 36 59
Entering state 88
Reducing stack by rule 50 (line 382):
   $1 = nterm term ()
   $2 = token MULTIPLY_T ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 36
Reading a token: Next token is token DO_T ()
Reducing stack by rule 46 (line 363):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 9 41 64 55 13 47 77 99 109 116 118
Entering state 119
Next token is token DO_T ()
Reducing stack by rule 25 (line 260):
   $1 = token ID ()
   $2 = token IS_T ()
   $3 = nterm expr ()
   $4 = token BY_T ()
   $5 = nterm expr ()
   $6 = token TO_T ()
   $7 = nterm expr ()
-> $$ = nterm for_body ()
Stack now 0 1 3 5 9 41 64 55 13
Entering state 48
Next token is token DO_T ()
Shifting token DO_T ()
Entering state 78
Reading a token: Next token is token WRITE_T ()
Shifting token WRITE_T ()
Entering state 14
Reading a token: Next token is token BRA_T ()
Shifting token BRA_T ()
Entering state 49
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 52 (line 392):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 37
Reducing stack by rule 49 (line 378):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 80
Reading a token: Next token is token KET_T ()
Reducing stack by rule 27 (line 270):
   $1 = nterm term ()
-> $$ = nterm output_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 14 49
Entering state 79
Next token is token KET_T ()
Shifting token KET_T ()
Entering state 101
Reducing stack by rule 17 (line 216):
   $1 = token WRITE_T ()
   $2 = token BRA_T ()
   $3 = nterm output_block ()
   $4 = token KET_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 24
Reducing stack by rule 8 (line 174):
   $1 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token SEMI_COLON_T ()
Shifting token SEMI_COLON_T ()
Entering state 55
Reading a token: Next token is token NEWLINE_T ()
Shifting token NEWLINE_T ()
Entering state 17
Reducing stack by rule 18 (line 220):
   $1 = token NEWLINE_T ()
-> $$ = nterm write_statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 26
Reducing stack by rule 10 (line 184):
   $1 = nterm write_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55 13 48 78 100 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41 64 55 13 48 78
Entering state 100
Reading a token: Next token is token END_FOR_T ()
Shifting token END_FOR_T ()
Entering state 110
Reducing stack by rule 24 (line 254):
   $1 = token FOR_T ()
   $2 = nterm for_body ()
   $3 = token DO_T ()
   $4 = nterm statement_block ()
   $5 = token END_FOR_T ()
-> $$ = nterm for_statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 31
Reducing stack by rule 15 (line 204):
   $1 = nterm for_statement ()
-> $$ = nterm statement ()
Stack now 0 1 3 5 9 41 64 55
Entering state 84
Reducing stack by rule 7 (line 170):
   $1 = nterm statement_block ()
   $2 = token SEMI_COLON_T ()
   $3 = nterm statement ()
-> $$ = nterm statement_block ()
Stack now 0 1 3 5 9 41
Entering state 64
Reading a token: Next token is token ENDP_T ()
Reducing stack by rule 2 (line 143):
   $1 = token DECLARATIONS_T ()
   $2 = nterm declarations ()
   $3 = token CODE_T ()
   $4 = nterm statement_block ()
-> $$ = nterm block ()
Stack now 0 1 3
Entering state 7
Next token is token ENDP_T ()
Shifting token ENDP_T ()
Entering state 38
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token FULL_STOP_T ()
Shifting token FULL_STOP_T ()
Entering state 90
Reducing stack by rule 1 (line 128):
   $1 = token ID ()
   $2 = token COLON_T ()
   $3 = nterm block ()
   $4 = token ENDP_T ()
   $5 = token ID ()
   $6 = token FULL_STOP_T ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
